/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-build-name: 'icon_build';
@icon-build-x: 0px;
@icon-build-y: 223px;
@icon-build-offset-x: 0px;
@icon-build-offset-y: -223px;
@icon-build-width: 87px;
@icon-build-height: 90px;
@icon-build-total-width: 440px;
@icon-build-total-height: 313px;
@icon-build-image: '../img/sprite.png';
@icon-build: 0px 223px 0px -223px 87px 90px 440px 313px '../img/sprite.png' 'icon_build';
@icon-chat-name: 'icon_chat';
@icon-chat-x: 0px;
@icon-chat-y: 0px;
@icon-chat-offset-x: 0px;
@icon-chat-offset-y: 0px;
@icon-chat-width: 134px;
@icon-chat-height: 117px;
@icon-chat-total-width: 440px;
@icon-chat-total-height: 313px;
@icon-chat-image: '../img/sprite.png';
@icon-chat: 0px 0px 0px 0px 134px 117px 440px 313px '../img/sprite.png' 'icon_chat';
@icon-clock-name: 'icon_clock';
@icon-clock-x: 277px;
@icon-clock-y: 0px;
@icon-clock-offset-x: -277px;
@icon-clock-offset-y: 0px;
@icon-clock-width: 102px;
@icon-clock-height: 89px;
@icon-clock-total-width: 440px;
@icon-clock-total-height: 313px;
@icon-clock-image: '../img/sprite.png';
@icon-clock: 277px 0px -277px 0px 102px 89px 440px 313px '../img/sprite.png' 'icon_clock';
@icon-doc-name: 'icon_doc';
@icon-doc-x: 0px;
@icon-doc-y: 117px;
@icon-doc-offset-x: 0px;
@icon-doc-offset-y: -117px;
@icon-doc-width: 102px;
@icon-doc-height: 106px;
@icon-doc-total-width: 440px;
@icon-doc-total-height: 313px;
@icon-doc-image: '../img/sprite.png';
@icon-doc: 0px 117px 0px -117px 102px 106px 440px 313px '../img/sprite.png' 'icon_doc';
@icon-hands-name: 'icon_hands';
@icon-hands-x: 134px;
@icon-hands-y: 0px;
@icon-hands-offset-x: -134px;
@icon-hands-offset-y: 0px;
@icon-hands-width: 143px;
@icon-hands-height: 108px;
@icon-hands-total-width: 440px;
@icon-hands-total-height: 313px;
@icon-hands-image: '../img/sprite.png';
@icon-hands: 134px 0px -134px 0px 143px 108px 440px 313px '../img/sprite.png' 'icon_hands';
@icon-home-name: 'icon_home';
@icon-home-x: 87px;
@icon-home-y: 223px;
@icon-home-offset-x: -87px;
@icon-home-offset-y: -223px;
@icon-home-width: 89px;
@icon-home-height: 80px;
@icon-home-total-width: 440px;
@icon-home-total-height: 313px;
@icon-home-image: '../img/sprite.png';
@icon-home: 87px 223px -87px -223px 89px 80px 440px 313px '../img/sprite.png' 'icon_home';
@icon-instogram-name: 'icon_instogram';
@icon-instogram-x: 379px;
@icon-instogram-y: 92px;
@icon-instogram-offset-x: -379px;
@icon-instogram-offset-y: -92px;
@icon-instogram-width: 36px;
@icon-instogram-height: 37px;
@icon-instogram-total-width: 440px;
@icon-instogram-total-height: 313px;
@icon-instogram-image: '../img/sprite.png';
@icon-instogram: 379px 92px -379px -92px 36px 37px 440px 313px '../img/sprite.png' 'icon_instogram';
@icon-instr-name: 'icon_instr';
@icon-instr-x: 206px;
@icon-instr-y: 117px;
@icon-instr-offset-x: -206px;
@icon-instr-offset-y: -117px;
@icon-instr-width: 64px;
@icon-instr-height: 92px;
@icon-instr-total-width: 440px;
@icon-instr-total-height: 313px;
@icon-instr-image: '../img/sprite.png';
@icon-instr: 206px 117px -206px -117px 64px 92px 440px 313px '../img/sprite.png' 'icon_instr';
@icon-pan-name: 'icon_pan';
@icon-pan-x: 379px;
@icon-pan-y: 0px;
@icon-pan-offset-x: -379px;
@icon-pan-offset-y: 0px;
@icon-pan-width: 61px;
@icon-pan-height: 92px;
@icon-pan-total-width: 440px;
@icon-pan-total-height: 313px;
@icon-pan-image: '../img/sprite.png';
@icon-pan: 379px 0px -379px 0px 61px 92px 440px 313px '../img/sprite.png' 'icon_pan';
@icon-phone-name: 'icon_phone';
@icon-phone-x: 277px;
@icon-phone-y: 89px;
@icon-phone-offset-x: -277px;
@icon-phone-offset-y: -89px;
@icon-phone-width: 73px;
@icon-phone-height: 114px;
@icon-phone-total-width: 440px;
@icon-phone-total-height: 313px;
@icon-phone-image: '../img/sprite.png';
@icon-phone: 277px 89px -277px -89px 73px 114px 440px 313px '../img/sprite.png' 'icon_phone';
@icon-play-name: 'icon_play';
@icon-play-x: 102px;
@icon-play-y: 117px;
@icon-play-offset-x: -102px;
@icon-play-offset-y: -117px;
@icon-play-width: 104px;
@icon-play-height: 103px;
@icon-play-total-width: 440px;
@icon-play-total-height: 313px;
@icon-play-image: '../img/sprite.png';
@icon-play: 102px 117px -102px -117px 104px 103px 440px 313px '../img/sprite.png' 'icon_play';
@spritesheet-width: 440px;
@spritesheet-height: 313px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @icon-build @icon-chat @icon-clock @icon-doc @icon-hands @icon-home @icon-instogram @icon-instr @icon-pan @icon-phone @icon-play;
@spritesheet: 440px 313px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
